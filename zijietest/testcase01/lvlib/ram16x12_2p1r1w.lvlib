/* ==================================================================================/* 
/*  Author: GWX Technology
/*  Attribution: Plain Text
/*  Birthday: Tue Oct 10 15:36:16 CST 2023
/*  Organization: GWX Technology
/*  Copyright: GWX Technology Â©2023 GWX Technology Inc. All rights reserved.
/* ----------------------------------------------------------------------------------/* 
/*  Description:
/*  All the data in the file was generated by GWX Technology. This information was
/*  prepared only for EDA tools training. GWX Technology does not guarantee the
/*  accuracy or completeness of the information contained herein. GWX Technology
/*  shall not be liable for any loss or damage of any kind arising from the use of
/*  this document or the information contained herein.
/* ----------------------------------------------------------------------------------/* 
/*  Version: 0.9.0.0 Alpha
/* ==================================================================================/* 


/*   --------------------------------------------------------------   */
/*                       Template Revision : 3.7.8                    */
/*   --------------------------------------------------------------   */

MemoryTemplate ( ram16x12_2p1r1w ) {
   CellName:      ram16x12_2p1r1w;
   MemoryType:    SRAM;
   LogicalPorts:  1R1W;
   NumberofWords:  16;
   NumberofBits :  12;
   Algorithm:  SMarch ;
   BitGrouping : 1;
   OperationSet: SyncWR;
   MinHold:  0.692;
   ShadowRead: Off;
   WriteOutOfRange: Off;
   AddressCounter {
     Function (Address) {
       LogicalAddressMaP {
         RowAddress [3:0] :
         Address [3:0] ;
       }
     }
     Function (Rowaddress) {
       CountRange [0:15];
     }
   }
Port (  QB[11:0] )
             {   
               Direction: OUTPUT;
               LogicalPort: B;
               Function: data;

             }
Port (  ADRA[3:0] )
             {   
               Direction: INPUT;
               LogicalPort: A;
               Function: Address;

             }
Port (  DA[11:0] )
             {   
               Direction: INPUT;
               LogicalPort: A;
               Function: data;

             }
Port (  WEA )
             {   
               Direction: INPUT;
               LogicalPort: A;
               Function: WriteEnable;
               Polarity: ActiveHigh;

             }
Port (  MEA )
             {   
               Direction: INPUT;
               LogicalPort: A;
               Function: Select;
               Polarity: ActiveHigh;

             }
Port (  CLKA )
             {   
               Direction: INPUT;
               LogicalPort: A;
               Function: Clock;
               Polarity: ActiveHigh;

             }
Port (  TEST1A )
             {   
               Direction: INPUT;
               LogicalPort: A;
               Function: LogicLow;

             }
Port (  WMENA )
             {   
               Direction: INPUT;
               LogicalPort: A;
               Function: LogicLow;

             }
Port (  ADRB[3:0] )
             {   
               Direction: INPUT;
               LogicalPort: B;
               Function: Address;

             }
Port (  MEB )
             {   
               Direction: INPUT;
               LogicalPort: B;
               Function: Select;
               Polarity: ActiveHigh;

             }
Port (  CLKB )
             {   
               Direction: INPUT;
               LogicalPort: B;
               Function: Clock;
               Polarity: ActiveHigh;

             }
Port (  TEST1B )
             {   
               Direction: INPUT;
               LogicalPort: B;
               Function: LogicLow;

             }
Port (  RMB[3:0] )
             {   
               Direction: INPUT;
               LogicalPort: B;
               Function: none;

             }
Port (  RMEB )
             {   
               Direction: INPUT;
               LogicalPort: B;
               Function: LogicLow;

             }
}
